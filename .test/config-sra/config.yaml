samples: config-sra/samples.tsv

units: config-sra/units.tsv

ref:
  # Number of chromosomes to consider for calling.
  # The first n entries of the FASTA will be considered.
  n_chromosomes: 17
  # Ensembl species name
  species: saccharomyces_cerevisiae
  # Ensembl release
  release: 110
  # Genome build
  build: R64-1-1
  pangenome:
    activate: false
    vcf: ""

primers:
  trimming:
    primers_fa1: ""
    primers_fa2: ""
    library_length: 0

# Estimation of tumor mutational burden.
mutational_burden:
  activate: true
  events:
    - changed_only

# Plotting of known mutational signatures
mutational_signatures:
  activate: false
  events:
    - some_id

calling:
  delly:
    activate: true
  freebayes:
    activate: true
  # See https://varlociraptor.github.io/docs/calling/#generic-variant-calling
  scenario: config-sra/scenario.yaml
  # See http://snpeff.sourceforge.net/SnpSift.html#filter
  filter:
    candidates: "ANN['IMPACT'] in ['MODERATE', 'HIGH']"
    moderate: "ANN['IMPACT'] == 'MODERATE'"
    no_filter: "True"
  fdr-control:
    threshold: 0.01
    # Denote FDR control mode.
    # The default (local-smart) is recommended because it provides the most realistic and intuitive results.
    # See see https://varlociraptor.github.io/docs/filtering for details.
    mode: local-smart
    # Retain artifacts upon FDR control (i.e. do not remove them from the callset,
    # see https://varlociraptor.github.io/docs/filtering)
    # Only applies in smart mode (local-smart or global-smart).
    events:
      moderate:
        desc: Variants with moderate impact
        varlociraptor:
          - base_only
          - changed_only
          - both
        filter:
          - moderate
      present:
        desc: All variants present, unfiltered.
        varlociraptor:
          - base_only
          - changed_only
          - both
        filter:
          - no_filter
      present_or_artifact:
        desc: All variants present, unfiltered and with the artifacts probability also considered part of the present probability.
        retain-artifacts: true
        varlociraptor:
          - base_only
          - changed_only
          - both
        filter:
          - no_filter

complement_events:
  filtered_artifacts:
    desc: All variants that were removed from the present event during fdr control due to a high artifacts probability.
    report: True
    types: ["variants", "fusions"]
    full: present_or_artifact
    remove:
      - present


annotations:
  dbnsfp:
    activate: false
  vcfs:
    activate: false
    known: resources/variation.vcf.gz
  dgidb:
    activate: false
  vep:
    candidate_calls:
      params: "--fields IMPACT"
      plugins: []
    final_calls:
      params: "--everything"
      plugins: []

params:
  cutadapt: ""
  picard:
    MarkDuplicates: ""
  gatk:
    BaseRecalibrator: ""
    applyBQSR: ""
  varlociraptor:
    # add extra arguments for varlociraptor call
    # For example, in case of panel data consider to omit certain bias estimations
    # which might be misleading because all reads of an amplicon have the sample start
    # position, strand etc. (--omit-strand-bias, --omit-read-position-bias, 
    # --omit-softclip-bias, --omit-read-orientation-bias).
    call: ""
    # Add extra arguments for varlociraptor preprocess. By default, we limit the depth to 200.
    # Increase this value for panel sequencing!
    preprocess: "--max-depth 50"
  freebayes:
    min_alternate_fraction: 0.4 # Reduce for calling variants with lower VAFs

gene_coverage:
  min_avg_coverage: 8

report:
  activate: true
  max_read_depth: 250
  stratify:
    activate: false
    by-column: condition

# optional: standardized mutation overview plots with maf:
# https://bioconductor.org/packages/release/bioc/vignettes/maftools/inst/doc/maftools.html
maf:
  activate: true
  # sample alias from scenario.yaml for tumor sample;
  # only necessary, if activate: true
  primary_alias: "base"
  # optional: sample alias from scenario.yaml for normal sample
  # control_alias: "normal"

tables:
  activate: false
  # vembrane expression to generate the table
  output:
    expression: "INDEX, CHROM, POS, REF, ALT[0], ANN['Consequence'], ANN['IMPACT'], ANN['SYMBOL'], ANN['Feature']"
    genotype: true
    coverage: true
    event_prob: true
  generate_excel: true
  
custom_alignment_properties:
  activate: false
  column: "panel"
  tsv: ""