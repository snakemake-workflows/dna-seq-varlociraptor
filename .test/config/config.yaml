samples: config/samples.tsv

units: config/units.tsv

ref:
  # Number of chromosomes to consider for calling.
  # The first n entries of the FASTA will be considered.
  n_chromosomes: 17
  # Ensembl species name
  species: saccharomyces_cerevisiae
  # Ensembl release
  release: 100
  # Genome build
  build: R64-1-1

primers:
  trimming:
    activate: false
    primers_fa1: ""
    primers_fa2: ""
    library_error: 0
    library_length: 0


# Estimation of tumor mutational burden.
tmb:
  activate: false
  # Size of the sequenced coding genome for TMB estimation
  # Attention: when doing panel sequencing, set this to the
  # CAPTURED coding genome, not the entire one!
  coding_genome_size: 3.0e7
  # Name of the tumor sample in the scenario.yaml.
  tumor_sample: tumor
  somatic_events:
    - SOMATIC_TUMOR_LOW
    - SOMATIC_TUMOR_MEDIUM
    - SOMATIC_TUMOR_HIGH

calling:
  delly:
    activate: true
  freebayes:
    activate: true
  # See https://varlociraptor.github.io/docs/calling/#generic-variant-calling
  scenario: config/scenario.yaml
  # See http://snpeff.sourceforge.net/SnpSift.html#filter
  filter:
    candidates: "ANN['IMPACT'] != 'LOW'"
    moderate: "ANN['IMPACT'] == 'MODERATE'"
  fdr-control:
    threshold: 0.05
    events: 
      present:
        varlociraptor: 
          - "PRESENT"
        filter: moderate

annotations:
  vcfs:
    activate: true
    known: resources/variation.vcf.gz
  dgidb:
    activate: true
    datasources:
      - DrugBank
  vep:
    params: --everything
    plugins:
      # Add any plugin from https://www.ensembl.org/info/docs/tools/vep/script/vep_plugins.html
      # Plugin args can be passed as well, e.g. "LoFtool,path/to/custom/scores.txt".
      - LoFtool


params:
  cutadapt: ""
  picard:
    MarkDuplicates: ""
  gatk:
    BaseRecalibrator: ""
    applyBQSR: ""

report:
  activate: true
  max_read_depth: 250
  stratify:
    activate: false
    by-column: condition

# printing of variants in a table format
tables:
  activate: true
  # vembrane expression to generate the table
  output:
    expression: "INDEX, CHROM, POS, REF, ALT[0], ANN['Consequence'], ANN['IMPACT'], ANN['SYMBOL'], ANN['Feature']"
    genotype: true
    coverage: true
    event_prob: true
  generate_excel: true
