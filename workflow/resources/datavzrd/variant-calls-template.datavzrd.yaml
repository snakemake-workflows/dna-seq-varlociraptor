name: ?f"Variant calls {wildcards.event}"

default-view: ?"overview" if input.variant_oncoprints else f"{params.groups[0]}-coding"

__definitions__:
  - |
    def read_file(path):
        return open(path, 'r').read()
  - |
    varsome_link = f"""
    function(value, row) {{
      let hgvsp_regex = /^(.+?):(.+)$/;
      // discard protein id
      let hgvsp = value.match(hgvsp_regex)[2].replace('%3D', '=');

      const url = "{params.varsome_url}";
      const regex = [
        /(\d+):[gG]\.(\d+)([GCTAgcta])?>([GCTAgcta])$/,
        /(\d+):[gG]\.(\d+)([gctaGCTA])?=$/,
        /(\d+):[gG]\.(\d+)(?:_(\d+))?([GCTAgcta]+)?delins([GCTAgcta]+)$/,
        /(\d+):[gG]\.(\d+)(?:_(\d+))?del([GCTAgcta]+)?$/,
        /(\d+):[gG]\.(\d+)_(\d+)ins([GCTAgcta]+)$/,
        /(\d+):[gG]\.(\d+)_(\d+)ins(\d+)_(\d+)inv$/,
      ];
      const hgvsgs = row.hgvsg.split(',')
      const descriptors = []
      const hgvsgs_matched = []
      for (let j = 0; j < hgvsgs.length; j++) {{
        for (let i = 0; i < regex.length; i++) {{
          const match = hgvsgs[j].match(regex[i]);
          if ( match ) {{
            switch (i) {{
              // SNV
              case 0:
                descriptor = match.splice(1).join(":");
                break;
              // Deletion
              case 3:
                del_size = match[3]-match[2]+1;
                descriptor = [match[1], match[2], del_size, ""].join(":");
                break;
              // Insertion
              case 4:
                descriptor = [match[1], match[3], "", match[4]].join(":");
                break;
              default:
                descriptor = null;
            }}
            if (descriptor) {{
              descriptors.push(descriptor)
              hgvsgs_matched.push(hgvsgs[j])
            }}
            break;
          }}
        }}
      }}
      if ( descriptors.length == 0) {{
        return `${{hgvsp}}`;
      }}
      else if ( descriptors.length == 1) {{
        return `<a href="${{url}}${{descriptors[0]}}" target="_blank">${{hgvsp}}</a>`;
      }}
      else {{
        dropdown = `<div class="dropdown show">`
        dropdown += `<a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">${{hgvsp}}</a>`
        dropdown += `<div class="dropdown-menu" aria-labelledby="dropdownMenuLink">`
        for (let i = 0; i < descriptors.length; i++) {{
          dropdown +=`<a class="dropdown-item" href="${{url}}${{descriptors[i]}}" target="_blank">${{hgvsp}} (${{hgvsgs_matched[i]}})</a>`
        }}
        dropdown += `</div></div>`
        return dropdown
      }}
    }}
    """

datasets:
  ?if input.variant_oncoprints:
    gene-oncoprint:
      path: ?params.gene_oncoprint
      separator: "\t"
      header-rows: ?params.n_group_annotations + 1
      links:
        gene details:
          column: symbol
          view: "overview-{value}"
    ?for gene, path in params.variant_oncoprints:
      ?f"variant-oncoprint-{gene}":
        path: ?path
        separator: "\t"
        header-rows: ?params.n_group_annotations + 1
        links:
          ?for group in params.groups:
            ?group:
              column: hgvsp
              table-row: ?f"{group}-coding/hgvsp"
              optional: true

  ?for group, path in zip(params.groups, params.coding_calls):
    ?f"{group}-coding":
      path: ?path
      separator: "\t"
  ?for group, path in zip(params.groups, params.noncoding_calls):
    ?f"{group}-noncoding":
      path: ?path
      separator: "\t"

views:
  ?if params.gene_oncoprint:
    overview:
      desc: |
        Overview table showing all discovered variants in all samples. Use link
        button to jump to detail views for the respective genes.
      dataset: gene-oncoprint
      render-table:
        symbol:
          link-to-url: https://www.ensembl.org/Homo_sapiens/Gene/Summary?g={value}
        consequence:
          plot:
            heatmap:
              scale: ordinal
              color-scheme: category20
        ?for group in params.groups:
          ?group:
            plot:
              heatmap:
                scale: ordinal
                color-scheme: paired
                aux-domain-columns: ?list(params.groups)
    
    ?for gene, path in params.variant_oncoprints:
      ?f"overview-{gene}":
        desc: ?f"Variants found in gene {gene}."
        dataset: ?f"variant-oncoprint-{gene}"
        hidden: true
        render-table:
          hgvsp:
            custom: ?varsome_link
          consequence:
            plot:
              heatmap:
                scale: ordinal
                color-scheme: category20
          ?for group in params.groups:
            ?group:
              plot:
                heatmap:
                  scale: ordinal
                  color-scheme: paired
                  aux-domain-columns: ?list(params.groups)
          hgvsg:
            display-mode: hidden

  ?for group in params.groups:
    ?f"{group}-coding":
      desc: ?f"Variants in coding regions.\n{config['calling']['fdr-control']['events'][wildcards.event]['desc']}"
      dataset: ?f"{group}-coding"
      render-table:
        symbol:
          link-to-url: https://www.ensembl.org/Homo_sapiens/Transcript/Summary?t={feature}
        ?if params.varsome_url:
          hgvsp:
            custom: ?varsome_link
        vartype:
          display-mode: hidden
        impact:
          plot:
            heatmap:
              scale: ordinal
              domain:
                - HIGH
                - MODERATE
                - LOW
                - MODIFIER
              range:
                - "#ec0000"
                - "#ec5300"
                - "#ec9b00"
                - "#ecca00"
        consequence:
          plot:
            heatmap:
              color-scheme: category20
              scale: ordinal
        revel:
          optional: true
          plot: 
            heatmap:
              scale: "linear"
              domain: [0.0, 1.0]
              range:
                - white
                - "#ff5555"
        "regex('.+: allele frequency')":
          plot: 
            ticks:
              scale: "linear"
              domain: [0.0, 1.0]
              aux-domain-columns:
                - "regex('.+: allele frequency')"
        "regex('.+: read depth')":
          plot: 
            ticks:
              scale: "linear"
              aux-domain-columns:
                - "regex('.+: read depth')"
        "regex('prob: .+')":
          plot:
            heatmap:
              scale: linear
              domain: [0.0, 1.0]
              range:
                - white
                - "#1f77b4"
        gene:
          display-mode: hidden
        feature:
          display-mode: hidden
        hgvsg:
          display-mode: detail

        ?for alias in params.samples.loc[params.samples["group"] == group, "alias"]:
          '?f"{alias}: observations"':
            custom-plot:
              data: ?read_file(params.data_observations)
              spec: ?read_file(params.spec_observations)
            display-mode: detail


    ?f"{group}-noncoding":
      desc: ?f"Variants in non-coding regions.\n{config['calling']['fdr-control']['events'][wildcards.event]['desc']}"
      dataset: ?f"{group}-noncoding"
      render-table:
        symbol:
          optional: true
          link-to-url: https://www.ensembl.org/Homo_sapiens/Transcript/Summary?t={feature}
        consequence:
          plot:
            heatmap:
              color-scheme: category20
              scale: ordinal
        vartype:
          display-mode: hidden
        impact:
          plot:
            heatmap:
              scale: ordinal
              domain:
                - HIGH
                - MODERATE
                - LOW
                - MODIFIER
              range:
                - "#ec0000"
                - "#ec5300"
                - "#ec9b00"
                - "#ecca00"
        "regex('.+: allele frequency')":
          plot: 
            ticks:
              scale: "linear"
              domain: [0.0, 1.0]
              aux-domain-columns:
                - "regex('.+: allele frequency')"
        "regex('.+: read depth')":
          plot: 
            ticks:
              scale: "linear"
              aux-domain-columns:
                - "regex('.+: read depth')"
        "regex('prob: .+')":
          plot:
            heatmap:
              scale: linear
              domain: [0.0, 1.0]
              range:
                - white
                - "#1f77b4"
        id:
          display-mode: hidden
        gene:
          display-mode: hidden
        feature:
          display-mode: hidden
        hgvsg:
          display-mode: detail

        ?for alias in params.samples.loc[params.samples["group"] == group, "alias"]:
          '?f"{alias}: observations"':
            custom-plot:
              data: ?read_file(params.data_observations)
              spec: ?read_file(params.spec_observations)
            display-mode: detail
