__use_yte__: true

name: ?f"Variant calls {wildcards.event}"

default-view: ?"overview" if input.variant_oncoprints else f"{params.groups[0]}-coding"
max-in-memory-rows: 1500

__definitions__:
  - import os
  - |
    def read_file(path):
        return open(path, 'r').read()
  - |
    hgvs_content = f"""
      function(value, row) {{
        let hgvs_regex = /^(.+?):(.+)$/;
        // discard protein id
        let hgvs = value.match(hgvs_regex)[2].replace('%3D', '=');
        return hgvs
      }}
    """
  - |
    protein_id = f"""
      function(row) {{
        if ( typeof row.hgvsp !== 'undefined') {{
        let protein_id = row.hgvsp.split(':')[0]
        return protein_id
        }}
        return ``
      }}
    """
  - |
    empty_content = f"""
      function(row) {{
        return ""
      }}
    """
  - |
    spliceai_content = f"""
      function(value, row) {{
        if (value.length !== 0) {{
          let effect = (typeof row.spliceai_effect !== 'undefined' ) ? row.spliceai_effect : "";
          return `${{effect}}${{value}}`
        }} else {{
          return ``
        }}
      }}
    """
  - |
    make_popover = f"""
      function(value, row) {{
        if (value.length === 0) {{
          return ``
        }}
        const len = value.split(',').length;
        return `<span data-toggle="popover" data-content="${{value}}">${{len}}</span>`;
      }}
    """

datasets:
  ?if input.variant_oncoprints:
    gene-oncoprint:
      path: ?input.gene_oncoprint
      separator: "\t"
      headers: ?len(params.group_annotations.columns) + 1
      links:
        gene details:
          column: symbol
          view: "overview-{value}"
    ?for label in params.labels.index.values:
      ?label:
        path: ?os.path.join(input.oncoprint_sorted_datasets, f"{label}.tsv")
        separator: "\t"
        headers: 2
    ?for gene, path in params.variant_oncoprints:
      ?f"variant-oncoprint-{gene}":
        path: ?path
        separator: "\t"
        headers: ?len(params.group_annotations.columns) + 1
        links:
          ?for group in params.groups:
            ?group:
              column: hgvsp
              table-row: ?f"{group}-coding/hgvsp"
              optional: true

  ?for group, path in zip(params.groups, input.coding_calls):
    ?f"{group}-coding":
      path: ?path
      separator: "\t"
  ?for group, path in zip(params.groups, input.noncoding_calls):
    ?f"{group}-noncoding":
      path: ?path
      separator: "\t"

views:
  ?if input.gene_oncoprint:
    ?for view in ["gene-oncoprint"] + list(params.labels.index.values):
      __variables__:
        labels: ?params.group_annotations.columns.values.tolist() if view == "gene-oncoprint" else [view]
      ?"overview" if view == "gene-oncoprint" else f"by {view}":
        ?if view == "gene-oncoprint":
          desc: |
            Overview table showing all discovered variants in all samples. Use link
            button to jump to detail views for the respective genes.
        ?else:
          desc: |
            ?f"""
            Rows are sorted by their statistical dependency on {view}, which is determined by a 
            [ChiÂ² test](https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.chi2.html).
            The corresponding p-value and Benjamini-Hochberg corrected FDR is shown in the last two columns.
            They represent the probability to observe an at least as strong dependency by chance.
            Rows with highest dependency are shown first.
            """
        dataset: ?view
        render-table:
          ?if labels:
            headers:
              ?for i, annotation in enumerate(labels):
                ?i + 1:
                  label: ?annotation
                  plot:
                    heatmap:
                      scale: ordinal
                      color-scheme: category20
          columns:
            symbol:
              link-to-url:
                ensembl:
                  url: https://www.ensembl.org/Homo_sapiens/Gene/Summary?g={value}
            consequence:
              plot:
                heatmap:
                  scale: ordinal
                  color-scheme: category20
            ?for group in params.groups:
              ?group:
                plot:
                  heatmap:
                    scale: ordinal
                    color-scheme: paired
                    aux-domain-columns: ?list(params.groups)
            p-value dependency:
              plot:
                ticks:
                  scale: linear
              optional: true
            FDR dependency:
              plot:
                ticks:
                  scale: linear
              optional: true

    ?for gene, path in params.variant_oncoprints:
      ?f"overview-{gene}":
        desc: ?f"Variants found in gene {gene}."
        dataset: ?f"variant-oncoprint-{gene}"
        hidden: true
        render-table:
          ?if params.group_annotations.columns.values.tolist():
            headers:
              ?for i, annotation in enumerate(params.group_annotations.columns.values):
                ?i + 1:
                  label: ?annotation
                  plot:
                    heatmap:
                      scale: ordinal
                      color-scheme: category20
          columns:
            consequence:
              plot:
                heatmap:
                  scale: ordinal
                  color-scheme: category20
            ?for group in params.groups:
              ?group:
                plot:
                  heatmap:
                    scale: ordinal
                    color-scheme: paired
                    aux-domain-columns: ?list(params.groups)
            hgvsg:
              display-mode: hidden
            hgvsc:
              optional: true
              display-mode: hidden

  ?for group in params.groups:
    ?f"{group}-coding":
      desc: |
        ?f"""
        Variants in coding regions.\n{params.event_desc}\n
        SpliceAI scores are probabilities of a variant being splice-altering.\n
        AlphaMissense scores are classified as: likely benign (<0.34), ambiguous (0.34<=, <=0.564), likely pathogenic (<0.564).
        """
      dataset: ?f"{group}-coding"
      render-table:
        columns:
          symbol:
            link-to-url:
              ensembl:
                url: https://www.ensembl.org/Homo_sapiens/Transcript/Summary?t={feature}
          'clinical significance':
            optional: true
            custom: ?read_file(input.clin_sig)
          hgvsp:
            custom: ?hgvs_content
          hgvsc:
            custom: ?read_file(input.linkouts)
          vartype:
            display-mode: hidden
          impact:
            plot:
              heatmap:
                scale: ordinal
                domain:
                  - HIGH
                  - MODERATE
                  - LOW
                  - MODIFIER
                range:
                  - "#ec0000"
                  - "#ec5300"
                  - "#ec9b00"
                  - "#ecca00"
          consequence:
            plot:
              heatmap:
                color-scheme: category20
                scale: ordinal
          revel:
            optional: true
            plot:
              heatmap:
                scale: "linear"
                domain: [0.0, 1.0]
                range:
                  - white
                  - "#ff5555"
          "regex('.+: allele frequency')":
            plot:
              ticks:
                scale: "linear"
                domain: [0.0, 1.0]
                aux-domain-columns:
                  - "regex('.+: allele frequency')"
                color:
                  scale: "linear"
                  domain: [0.0, 0.05, 0.0500000001, 1.0]
                  range:
                  - "#ffd6b3"
                  - "#ff7f0e"
                  - "#a8d2f0"
                  - "#1f77b4"
          "regex('.+: read depth')":
            plot:
              ticks:
                scale: "linear"
                aux-domain-columns:
                  - "regex('.+: read depth')"
          "regex('prob: .+')":
            plot:
              heatmap:
                scale: linear
                domain: [0.0, 1.0]
                range:
                  - white
                  - "#1f77b4"
          "gnomad genome af":
            optional: true
            plot:
              heatmap:
                scale: "linear"
                domain: [0.0, 0.01, 1.0]
                range:
                  - white
                  - "#adebad"
                  - "#29a329"
          gene:
            display-mode: hidden
          feature:
            display-mode: hidden
          binned max vaf:
            display-mode: hidden
          swissprot:
            optional: true
            display-mode: hidden
          hgvsg:
            display-mode: hidden
          chromosome:
            display-mode: detail
          end position:
            display-mode: detail
          position:
            display-mode: detail
          reference allele:
            display-mode: detail
          alternative allele:
            display-mode: detail
          protein position:
            display-mode: detail
          protein alteration (short):
            display-mode: detail
          canonical:
            optional: true
            display-mode: detail
            plot:
              heatmap:
                scale: "ordinal"
                domain: ["", "True"]
                range:
                  - white
                  - black
                custom-content: ?empty_content
          mane_plus_clinical:
            optional: true
            display-mode: detail
            plot:
              heatmap:
                scale: "ordinal"
                domain: ["", "True"]
                range:
                  - white
                  - black
                custom-content: ?empty_content
          ?for alias in params.samples.loc[params.samples["group"] == group, "alias"]:
            '?f"{alias}: short observations"':
              optional: true
              custom-plot:
                data: ?read_file(input.data_short_observations)
                spec: ?read_file(input.spec_short_observations)
              display-mode: detail
            '?f"{alias}: observations"':
              optional: true
              custom-plot:
                data: ?read_file(input.data_observations)
                spec: ?read_file(input.spec_observations)
              display-mode: detail
          spliceai:
            optional: true
            plot:
              heatmap:
                scale: "linear"
                domain: [0.0, 0.2, 0.5, 0.8, 1.0]
                range:
                  - "#ffffff"
                  - "#f9f7ae"
                  - "#fcac63"
                  - "#f16e43"
                  - "#d4322c"
                custom-content: ?spliceai_content
          spliceai_effect:
            optional: true
            display-mode: hidden
          alphamissense:
            optional: true
            plot:
              heatmap:
                scale: "linear"
                domain: [0.0, 0.34, 0.564, 1.0]
                range:
                  - "#22964"
                  - "#d7ee82"
                  - "#fedd8e"
                  - "#d4322c"
          population:
            optional: true
            custom: ?make_popover
        add-columns:
          build:
            value: ?f"function() {{ return `{params.build}` }}"
            display-mode: hidden
          ensembl_protein_id:
            value: ?protein_id
            display-mode: detail


    ?f"{group}-noncoding":
      desc: |
        ?f"""
        Variants in non-coding regions.\n{params.event_desc}
        SpliceAI scores are probabilities of a variant being splice-altering.\n
        AlphaMissense scores are classified as: likely benign (<0.34), ambiguous (0.34<=, <=0.564), likely pathogenic (0.564<).
        """
      dataset: ?f"{group}-noncoding"
      render-table:
        columns:
          symbol:
            optional: true
            link-to-url:
              ensembl:
                url: https://www.ensembl.org/Homo_sapiens/Transcript/Summary?t={feature}
          hgvsc:
            optional: true
            custom: ?read_file(input.linkouts)
          consequence:
            plot:
              heatmap:
                color-scheme: category20
                scale: ordinal
          vartype:
            display-mode: hidden
          swissprot:
            optional: true
            display-mode: hidden
          impact:
            plot:
              heatmap:
                scale: ordinal
                domain:
                  - HIGH
                  - MODERATE
                  - LOW
                  - MODIFIER
                range:
                  - "#ec0000"
                  - "#ec5300"
                  - "#ec9b00"
                  - "#ecca00"
          "regex('.+: allele frequency')":
            plot:
              ticks:
                scale: "linear"
                domain: [0.0, 1.0]
                aux-domain-columns:
                  - "regex('.+: allele frequency')"
                color:
                  scale: "linear"
                  domain: [0.0, 0.05, 0.0500000001, 1.0]
                  range:
                  - "#ffd6b3"
                  - "#ff7f0e"
                  - "#a8d2f0"
                  - "#1f77b4"
          "regex('.+: read depth')":
            plot:
              ticks:
                scale: "linear"
                aux-domain-columns:
                  - "regex('.+: read depth')"
          "regex('prob: .+')":
            plot:
              heatmap:
                scale: linear
                domain: [0.0, 1.0]
                range:
                  - white
                  - "#1f77b4"
          "gnomad genome af":
            optional: true
            plot:
              heatmap:
                scale: "linear"
                domain: [0.0, 0.01, 1.0]
                range:
                  - white
                  - "#adebad"
                  - "#29a329"
          id:
            optional: true
            display-mode: hidden
          gene:
            display-mode: hidden
          feature:
            display-mode: hidden
          binned max vaf:
            display-mode: hidden
          hgvsg:
            optional: true
            display-mode: hidden
          chromosome:
            display-mode: detail
          end position:
            display-mode: detail
          position:
            display-mode: detail
          reference allele:
            display-mode: detail
          alternative allele:
            display-mode: detail
          canonical:
            optional: true
            display-mode: detail
            plot:
              heatmap:
                scale: "ordinal"
                domain: ["", "True"]
                range:
                  - white
                  - black
                custom-content: ?empty_content
          mane_plus_clinical:
            optional: true
            display-mode: detail
            plot:
              heatmap:
                scale: "ordinal"
                domain: ["", "True"]
                range:
                  - white
                  - black
                custom-content: ?empty_content
          ?for alias in params.samples.loc[params.samples["group"] == group, "alias"]:
            '?f"{alias}: short observations"':
              optional: true
              custom-plot:
                data: ?read_file(input.data_short_observations)
                spec: ?read_file(input.spec_short_observations)
              display-mode: detail
            '?f"{alias}: observations"':
              optional: true
              custom-plot:
                data: ?read_file(input.data_observations)
                spec: ?read_file(input.spec_observations)
              display-mode: detail
          spliceai:
            optional: true
            plot:
              heatmap:
                scale: "linear"
                domain: [0.0, 0.2, 0.5, 0.8, 1.0]
                range:
                  - "#22964"
                  - "#f9f7ae"
                  - "#fcac63"
                  - "#f16e43"
                  - "#d4322c"
                custom-content: ?spliceai_content
          spliceai_effect:
            optional: true
            display-mode: hidden
          alphamissense:
            optional: true
            plot:
              heatmap:
                scale: "linear"
                domain: [0.0, 0.34, 0.564, 1.0]
                range:
                  - "#22964"
                  - "#d7ee82"
                  - "#fedd8e"
                  - "#d4322c"
          population:
            optional: true
            custom: ?make_popover
        add-columns:
          build:
            value: ?f"function() {{ return `{params.build}` }}"
            display-mode: hidden
